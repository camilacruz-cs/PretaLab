# -*- coding: utf-8 -*-
"""aula3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wn-qW2n_G0R825zZeLwStaOvCFc67lsJ

### Preparando o ambiente
"""

# Montando o Google Drive
from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/pasta/

import os
print(os.getcwd())

!ls

"""# Prática - Exercícos de Estátistica e Testes de Hipóteses

### Objetivos

Explorar:

1. Probabilidade: Avaliar a probabilidade de eventos relacionados ao comportamento do cliente.

2. Amostragem: Utilizar técnicas de amostragem para extrair dados representativos.

3. Testes de Hipóteses: Realizar testes estatísticos para entender se as mudanças propostas têm um impacto significativo.

### Cenário

Vamos analisar os dados de um e-commerce para entender melhor o comportamento dos clientes durante a jornada de compra. Os dados incluem informações sobre o tempo gasto em diferentes etapas da compra, o dispositivo utilizado (Desktop ou Mobile), e o tipo de cliente (Novo, Recorrente, VIP).

O objetivo é identificar oportunidades para melhorar a experiência do usuário.


  ***Queremos entender:***

1. Se o tempo de pesquisa é significativamente diferente entre tipos de clientes.

2. Se existe uma relação entre o tipo de cliente e o dispositivo usado.

3. Se há diferenças significativas no tempo de checkout entre clientes novos, recorrentes e VIPs.

4. A probabilidade de um cliente VIP realizar uma compra em um dado período.

5. Como a amostragem afeta a precisão das conclusões.

### Passo 1: Gerando Dados Fictícios
"""

import pandas as pd
import numpy as np
from scipy.stats import ttest_ind, chi2_contingency, f_oneway
import matplotlib.pyplot as plt
import seaborn as sns

# Gerando dados fictícios
np.random.seed(42)  # Para reprodutibilidade

# Dados dos clientes (tipos de clientes)
num_clientes = 5000
tipos_clientes = np.random.choice(['Novo', 'Recorrente', 'VIP'], size=num_clientes, p=[0.6, 0.3, 0.1])
dispositivos = np.random.choice(['Desktop', 'Mobile'], size=num_clientes, p=[0.5, 0.5])

# Tempo gasto em cada etapa da jornada de compra (em minutos)
tempo_pesquisa = np.random.normal(loc=20, scale=5, size=num_clientes) # média 20 minutos
tempo_visualizacao = np.random.normal(loc=10, scale=3, size=num_clientes) # média 10 minutos
tempo_carrinho = np.random.normal(loc=5, scale=2, size=num_clientes) # média 5 minutos
tempo_checkout = np.random.normal(loc=3, scale=1, size=num_clientes) # média 3 minutos

# Criando o DataFrame
dados = pd.DataFrame({
    'Tipo_Cliente': tipos_clientes,
    'Dispositivo': dispositivos,
    'Tempo_Pesquisa': tempo_pesquisa,
    'Tempo_Visualizacao': tempo_visualizacao,
    'Tempo_Carrinho': tempo_carrinho,
    'Tempo_Checkout': tempo_checkout
})

# Exibindo as primeiras linhas do DataFrame
print(dados.head())

# Exibindo as informações do DataFrame
dados.info()

"""### Passo 2: Análise Descritiva

Vamos realizar uma análise descritiva dos dados para entender melhor a distribuição do tempo gasto em cada etapa.
"""

# Análise descritiva
print(dados.groupby('tipo_cliente').agg(['mean', 'std', 'min', 'max']))

"""### Passo 3:  Probabilidade"""

# Probabilidade de um cliente VIP realizar uma compra em um dado período
num_vips = len(df[df['Tipo_Cliente'] == 'VIP'])

probabilidade_vip = num_vips / num_clientes

print(f"Probabilidade de um cliente ser VIP: {probabilidade_vip:.2%}")

"""### Passo 4: Amostragem"""

# Extraindo uma amostra aleatória de 500 clientes para análise
amostra = df.sample(n=500, random_state=42)

print(f"Amostra de 500 clientes:\n{amostra.head()}")

"""### Passo 5: Teste de Hipóteses - Teste T para Diferença de Médias

Testando se o tempo médio de pesquisa é diferente entre clientes "Novos" e "Recorrentes"
"""

from scipy.stats import ttest_ind

tempo_pesquisa_novos = df[df['Tipo_Cliente'] == 'Novo']['Tempo_Pesquisa']
tempo_pesquisa_recorrentes = df[df['Tipo_Cliente'] == 'Recorrente']['Tempo_Pesquisa']

# Aplicando o teste T
t_stat, p_value = ttest_ind(novos, recorrentes)

t_stat, p_value = ttest_ind(tempo_pesquisa_novos, tempo_pesquisa_recorrentes)

print(f"Teste T para Tempo de Pesquisa (Novos vs Recorrentes):")
print(f"Estatística T: {t_stat:.4f}, Valor-p: {p_value:.4f}")



"""### Passo 6: Teste Qui-Quadrado para Associação entre Variáveis Categóricas"""

contingencia = pd.crosstab(df['Tipo_Cliente'], df['Dispositivo'])

chi2_stat, p_value, dof, expected = chi2_contingency(contingencia)

print(f"Teste Qui-Quadrado entre Tipo de Cliente e Dispositivo:")

print(f"Estatística Qui-Quadrado: {chi2_stat:.4f}, Valor-p: {p_value:.4f}")

"""### Passo 7: ANOVA para Comparar o Tempo Médio de Checkout entre os Grupos"""

grupo_novo = df[df['Tipo_Cliente'] == 'Novo']['Tempo_Checkout']

grupo_recorrente = df[df['Tipo_Cliente'] == 'Recorrente']['Tempo_Checkout']

grupo_vip = df[df['Tipo_Cliente'] == 'VIP']['Tempo_Checkout']

f_stat, p_value = f_oneway(grupo_novo, grupo_recorrente, grupo_vip)

print(f"ANOVA para Tempo de Checkout (Novos, Recorrentes, VIP):")
print(f"Estatística F: {f_stat:.4f}, Valor-p: {p_value:.4f}")



"""### Passo 7: Visuaçizações"""

# Distribuição do Tempo de Pesquisa por Tipo de Cliente
plt.figure(figsize=(10, 6))
sns.boxplot(x='Tipo_Cliente', y='Tempo_Pesquisa', data=df)
plt.title('Distribuição do Tempo de Pesquisa por Tipo de Cliente')
plt.show()

# Gráfico de Barras para Associação entre Tipo de Cliente e Dispositivo
plt.figure(figsize=(8, 5))
sns.countplot(x='Tipo_Cliente', hue='Dispositivo', data=df)
plt.title('Distribuição de Dispositivos por Tipo de Cliente')
plt.show()

# Gráfico de Dispersão para Tempo de Checkout por Tipo de Cliente
plt.figure(figsize=(10, 6))
sns.scatterplot(x='Tipo_Cliente', y='Tempo_Checkout', data=df, hue='Tipo_Cliente', alpha=0.6)
plt.title('Tempo de Checkout por Tipo de Cliente')
plt.show()